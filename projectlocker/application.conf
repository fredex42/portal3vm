# This is the main configuration file for the application.
# ~~~~~

play.http.secret.key="%APPLICATION_SECRET%"

akka.http.server.request-timeout = 120 seconds

play.filters {

  # Enabled filters are run automatically against Play.
  # CSRFFilter, AllowedHostFilters, and SecurityHeadersFilters are enabled by default.

  hosts {
    allowed = ["localhost:9000"]
  }

  # Disabled filters remove elements from the enabled list.
  disabled += play.filters.headers.SecurityHeadersFilter #temporarily disabled, pending testing in the frontend
  disabled += play.filters.hosts.AllowedHostsFilter #at present, enabling this breaks the tests
  disabled += play.filters.csrf.CSRFFilter #temporarily disabled until CSRF implemented in the frontend
}

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
play.modules.disabled += "play.api.db.DBModule" //needed to make Slick work

# Default database configuration
// can now set DATABASE_URL to a JDBC URI to access database with this
slick.dbs.default.driver="slick.driver.PostgresDriver$"
slick.dbs.default.db.properties.driver = "org.postgresql.Driver"
slick.dbs.default.db.url="jdbc:postgresql://localhost/projectlocker?user=projectlocker"
slick.dbs.default.db.properties.url="jdbc:postgresql://localhost/projectlocker?user=projectlocker&password=projectlocker"
slick.dbs.default.db.user="projectlocker"
slick.dbs.default.db.password="projectlocker"
slick.dbs.default.db.connectionTimeout=30s
slick.dbs.default.db.database="projectlocker"
slick.dbs.default.db.numThreads=1
slick.dbs.default.db.connectionTestQuery="/*ping*/ select 1"


play.http.parser.maxMemoryBuffer=512K
play.http.parser.maxDiskBuffer=419430400

ldap {
  ldapProtocol = "none"
  ldapUseKeystore = true
  ldapPort = 636
  ldapHost0 = "adhost1.myorg.int"
  ldapHost1 = "adhost2.myorg.int"
  bindDN = "aduser"
  bindPass = "adpassword"
  poolSize = 3
  roleBaseDN = "DC=myorg,DC=com"
  userBaseDN = "DC=myorg,DC=com"
  uidAttribute = "samAccountName"
  memberAttribute = "member"
  roleMemberAttribute = "memberOf"
  roleAttribute = "CN"
  trustStore = "secure/keystore.jks"
  trustStorePass = "BeanstalkToTheStars"
  trustStoreType = "JKS"
  ldapCacheDuration = 600
  acg1 = "acg-name-1"
  admin-groups = ["AG Multimedia Admin"]
}

# Session configuration
play.http.session = {

  # The cookie name
  cookieName = "projectlocker_local_session"

  # Whether the secure attribute of the cookie should be set to true, i.e. only send over https.
  # we want https in production but might not be able to use it if this is done at the LB
  secure = false

  # The max age to set on the cookie.
  # If null, the cookie expires when the user closes their browser.
  # An important thing to note, this only sets when the browser will discard the cookie.
  maxAge = null

  # Whether the HTTP only attribute of the cookie should be set to true. this prevents the cookie from being accessible
  # to client-side javascript and therefore XSS attacks
  httpOnly = true

  # The value of the SameSite attribute of the cookie. Set to null for no SameSite attribute.
  sameSite = "strict"

  # The domain to set on the session cookie
  # If null, does not set a domain on the session cookie.
  # You should change this to your deployment domain
  domain = null

  # The session path
  # Must start with /.
  path = ${play.http.context}

  jwt {
    # The JWT signature algorithm to use on the session cookie
    # uses 'alg' https://tools.ietf.org/html/rfc7515#section-4.1.1
    signatureAlgorithm = "HS256"

    # The time after which the session is automatically invalidated.
    # Use 'exp' https://tools.ietf.org/html/rfc7519#section-4.1.4
    expiresAfter = ${play.http.session.maxAge}

    # The amount of clock skew to accept between servers when performing date checks
    # If you have NTP or roughtime synchronizing between servers, you can enhance
    # security by tightening this value.
    clockSkew = 1 minutes

    # The claim key under which all user data is stored in the JWT.
    dataClaim = "data"
  }
}

#akka cluster
akka {
  pluto-message-dispatcher {
    type = Dispatcher
    executor = "fork-join-executor"

    fork-join-executor {
      parallelism-min = 2
      parallelism-factor = 2.0
      parallelism-max = 4
    }
    throughput = 1
  }

  actor {
    provider = "cluster"

    deployment {
      /message-processor-actor {
        dispatcher = pluto-message-dispatcher
      }
    }
  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }

  persistence {
    journal {
      plugin = "akka.persistence.journal.inmem"
    }
  }

}

postrun {
  scriptsPath = "postrun/scripts/"
}

pluto {
  server_url = "http://pluto" #this is defined in /etc/hosts on the dev vm
  sync_enabled = "yes"
  username = "projectlocker_svc"
  password = "projectlocker"
  sitename = "VX"
  pageSize = 100
  resend_delay = 30 seconds
  persistence-snapshot-interval = 50
}

shared_secret = "dvskjafdsjbkvsavs"
